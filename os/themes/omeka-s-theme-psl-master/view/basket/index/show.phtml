<?php
/*
 * Copyright BibLibre, 2016
 *
 * This software is governed by the CeCILL license under French law and abiding
 * by the rules of distribution of free software.  You can use, modify and/ or
 * redistribute the software under the terms of the CeCILL license as circulated
 * by CEA, CNRS and INRIA at the following URL "http://www.cecill.info".
 *
 * As a counterpart to the access to the source code and rights to copy, modify
 * and redistribute granted by the license, users are provided only with a
 * limited warranty and the software's author, the holder of the economic
 * rights, and the successive licensors have only limited liability.
 *
 * In this respect, the user's attention is drawn to the risks associated with
 * loading, using, modifying and/or developing or reproducing the software by
 * the user in light of its specific status of free software, that may mean that
 * it is complicated to manipulate, and that also therefore means that it is
 * reserved for developers and experienced professionals having in-depth
 * computer knowledge. Users are therefore encouraged to load and test the
 * software's suitability as regards their requirements in conditions enabling
 * the security of their systems and/or data to be ensured and, more generally,
 * to use and operate it in the same conditions as regards security.
 *
 * The fact that you are presently reading this means that you have had
 * knowledge of the CeCILL license and that you accept its terms.
 */
?>

<?php $this->pageTitle('Panier'); ?>

<div id="content" role="main">
    <?php echo $this->SearchForm(); ?>

    <div class="basket-header">
        <h2>Panier</h2>

        <div class="basket-sort">
            <span>Mode de tri</span>
            <?php echo $this->partial('psl/basket-sort-field', [
                'title' => 'Titre',
                'sort_by' => 'dcterms:title',
            ]); ?>
            <?php echo $this->partial('psl/basket-sort-field', [
                'title' => 'Auteur',
                'sort_by' => 'dcterms:creator',
            ]); ?>
            <?php echo $this->partial('psl/basket-sort-field', [
                'title' => 'Date',
                'sort_by' => 'dcterms:date',
            ]); ?>
        </div>

        <div class="basket-display-options">
            <a id="basket-view-type-grid" href="#"><img src="<?php echo $this->assetUrl('images/grid.svg'); ?>"/></a>
            <a id="basket-view-type-list" href="#"><img src="<?php echo $this->assetUrl('images/list.svg'); ?>"/></a>
        </div>
    </div>

    <?php
        foreach ($basketItems as $basketItem) {
            $resource = $basketItem->resource();
            $resources[$resource->resourceName()][] = $resource;
        }

        $items = isset($resources['items']) ? $resources['items'] : [];
        $media = isset($resources['media']) ? $resources['media'] : [];
    ?>

    <?php if (!empty($items)): ?>
        <h3><?php echo count($items) == 1 ? '1 contenu' : sprintf('%s contenus', count($items)); ?></h3>
        <div class="resource-list">
            <?php foreach ($items as $item): ?>
                <?php echo $this->partial('search/resource', ['resource' => $item]); ?>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>

    <?php if (!empty($media)): ?>
        <h3><?php echo count($media) == 1 ? '1 fichier' : sprintf('%s fichiers', count($media)); ?></h3>
        <div class="resource-list">
            <?php foreach ($media as $medium): ?>
                <?php echo $this->partial('search/resource', ['resource' => $medium]); ?>
            <?php endforeach; ?>
        </div>
    <?php endif; ?>
</div>

<script>
    $(document).ready(function() {
        var objectFromQueryString = function(str) {
            var params = {};
            str
                .replace(/(^\?)/, '')
                .split("&")
                .filter(function(element) { return element !== '' })
                .forEach(function(n) {
                    n = n.split('=');
                    var name = decodeURIComponent(n[0]);
                    if (!params.hasOwnProperty(name)) {
                        params[name] = decodeURIComponent(n[1]);
                    } else {
                        if (!Array.isArray(params[name])) {
                            params[name] = [params[name]];
                        }
                        params[name].push(decodeURIComponent(n[1]));
                    }
                });

            return params;
        };

        var queryStringFromObject = function(obj) {
            return Object.keys(obj).map(function(name) {
                if (Array.isArray(obj[name])) {
                    return obj[name].map(function(value) {
                        return name + '=' + value;
                    }).join('&');
                } else {
                    return name + '=' + obj[name];
                }
            }).join('&');
        };

        var sortBy = function(sort_by, sort_order) {
            var params = objectFromQueryString(document.location.search);
            params['sort_by'] = sort_by;
            params['sort_order'] = sort_order;
            window.location.search = '?' + queryStringFromObject(params);
        };

        $('.sort-direction').on('click', function() {
            sortBy($(this).attr('data-sort-by'), $(this).attr('data-sort-order'));
        });
        $('.sort-label').on('click', function() {
            var direction = $(this).parents('.sort-field')
                .find('.sort-direction')
                .not('.sort-active')
                .first();
            if (direction) {
                sortBy(direction.attr('data-sort-by'), direction.attr('data-sort-order'));
            }
        });

        var setViewType = function(viewType) {
            var resourceLists = document.querySelectorAll("div.resource-list");
            for (var i = 0; i < resourceLists.length; i++) {
                var resourceItem = resourceLists[i];
                resourceItem.classList.remove('list');
                resourceItem.classList.remove('grid');
                resourceItem.classList.add(viewType);
            }
            localStorage.setItem('basket_view_type', viewType);
        };

        var viewType = localStorage.getItem('basket_view_type');
        if (!viewType) {
            viewType = 'list';
        }
        setViewType(viewType);

        $('#basket-view-type-list').on('click', function(e) {
            e.preventDefault();
            setViewType('list');
        });
        $('#basket-view-type-grid').on('click', function(e) {
            e.preventDefault();
            setViewType('grid');
        });
    });
</script>
